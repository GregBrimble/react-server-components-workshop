/*
 React
 react-noop-renderer-server.production.min.js

 Copyright (c) Meta Platforms, Inc. and affiliates.

 This source code is licensed under the MIT license found in the
 LICENSE file in the root directory of this source tree.
*/
'use strict';var e=require("react-server"),f=Buffer.from("/","utf8");function g(a,b){var c=a.stack;b===f?c.pop():(b=JSON.parse(Buffer.from(b).toString("utf8")),0===c.length?a.root=b:c[c.length-1].children.push(b),c.push(b))}
var h=e.default({scheduleWork:function(a){a()},beginWriting:function(){},writeChunk:function(a,b){g(a,b)},writeChunkAndReturn:function(a,b){g(a,b);return!0},completeWriting:function(){},close:function(){},closeWithError:function(){},flushBuffered:function(){},getChildFormatContext:function(){return null},resetResumableState:function(){},completeResumableState:function(){},pushTextInstance:function(a,b){a.push(Buffer.from(JSON.stringify({text:b,hidden:!1}),"utf8"),f);return!1},pushStartInstance:function(a,
b,c){a.push(Buffer.from(JSON.stringify({type:b,children:[],prop:c.prop,hidden:!1}),"utf8"));return c.children},pushEndInstance:function(a){a.push(f)},pushSegmentFinale:function(){},writeCompletedRoot:function(){return!0},writePlaceholder:function(a,b,c){b=a.stack[a.stack.length-1];a.placeholders.set(c,{parent:b,index:b.children.length})},writeStartCompletedSuspenseBoundary:function(a,b,c){c.state="complete";a.stack[a.stack.length-1].children.push(c);a.stack.push(c)},writeStartPendingSuspenseBoundary:function(a,
b,c){c.state="pending";a.stack[a.stack.length-1].children.push(c);a.stack.push(c)},writeStartClientRenderedSuspenseBoundary:function(a,b,c){c.state="client-render";a.stack[a.stack.length-1].children.push(c);a.stack.push(c)},writeEndCompletedSuspenseBoundary:function(a){a.stack.pop()},writeEndPendingSuspenseBoundary:function(a){a.stack.pop()},writeEndClientRenderedSuspenseBoundary:function(a){a.stack.pop()},writeStartSegment:function(a,b,c,d){b={children:[]};a.segments.set(d,b);if(0<a.stack.length)throw Error("Segments are only expected at the root of the stack.");
a.stack.push(b)},writeEndSegment:function(a){a.stack.pop()},writeCompletedSegmentInstruction:function(a,b,c){var d;b=a.segments.get(c);if(!b)throw Error("Missing segment.");a=a.placeholders.get(c);if(!a)throw Error("Missing placeholder.");(d=a.parent.children).splice.apply(d,[a.index,0].concat(b.children))},writeCompletedBoundaryInstruction:function(a,b,c,d){a=a.segments.get(d);if(!a)throw Error("Missing segment.");c.children=a.children;c.state="complete"},writeClientRenderBoundaryInstruction:function(a,
b,c){c.status="client-render"},writePreamble:function(){},writeHoistables:function(){},writePostamble:function(){},createBoundaryResources:function(){return null},setCurrentlyRenderingBoundaryResourcesTarget:function(){},prepareHostDispatcher:function(){},emitEarlyPreloads:function(){}});
exports.render=function(a,b){var c={root:null,placeholders:new Map,segments:new Map,stack:[],abort:function(){h.abort(d)}},d=h.createRequest(a,null,null,b?b.progressiveChunkSize:void 0,b?b.onError:void 0,b?b.onAllReady:void 0,b?b.onShellReady:void 0);h.startWork(d);h.startFlowing(d,c);return c};

//# sourceMappingURL=react-noop-renderer-server.production.min.js.map
